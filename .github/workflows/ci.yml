# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "ma23dsti" ]
  pull_request:
    branches: [ "ma23dsti" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - id: repo
        name: PythonMLProj
        uses: actions/checkout@v3

      - id: python
        name: Python setup and packages
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - run: python3 -m pip install -U wheel setuptools
      - run: python3 -m pip install -r requirements.txt

      - id: jupyter
        name: Jupyter Notebook Execution
        #run: jupyter execute PythonMLProj/Project1Code.ipynb
        run: jupyter nbconvert --to notebook --execute PythonMLProj/Project1Code.ipynb
        #shell: bash

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      #- id: artifact-upload-step
        #uses: actions/upload-artifact@v4
        #with:
          #name: my-artifact
          #path: PythonMLProj/

      - name: Save-results-as-Artifact
        uses: actions/upload-artifact@v4
        with:
          name: notebook-results
          path: PythonMLProj/Project1Code.ipynb

      - name: Output artifact URL
        run:  |
          echo 'Artifact URL is ${{ steps.Save-results-as-Artifact.outputs.artifact-url }}'
        #echo 'Artifact URL is ${{ steps.artifact-upload-step.outputs.artifact-url }}'
